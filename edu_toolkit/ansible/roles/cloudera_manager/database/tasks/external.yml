---
- name: Set root pwd
  mysql_user:
    name: root
    password: BadPass@1
    check_implicit_admin: true

- name: Create Cloudera Manager database user
  mysql_user:
    name: "{{ cloudera_manager_database_user }}"
    password: "{{ cloudera_manager_database_password }}"
    update_password: always
    host: '%'
    priv: "{{ cloudera_manager_database_name }}.*:ALL"
  delegate_to: "{{ cloudera_manager_database_host }}"
  connection: ssh
  when:
  - cloudera_manager_database_type == 'mysql' or cloudera_manager_database_type == 'mariadb'


- name: Create Cloudera Manager database
  mysql_db:
    name: "{{ cloudera_manager_database_name }}"
    encoding: utf8
    collation: utf8_general_ci
  delegate_to: "{{ cloudera_manager_database_host }}"
  connection: ssh
  when:
  - cloudera_manager_database_type == 'mysql' or cloudera_manager_database_type == 'mariadb'



- name: Prepare Cloudera Manager Server external database
  command: |
    {{ cloudera_manager_database_prepare_script }}  -f --host {{ cloudera_manager_database_host }}
    {{ cloudera_manager_database_type | regex_replace('mariadb', 'mysql') }}
    {{ cloudera_manager_database_name }}
    {{ cloudera_manager_database_user }}
    {{ cloudera_manager_database_password }}
  changed_when: False

- name: Create Cloudera Manager database
  mysql_db:
    name: 
      - metastore
      - amon
      - rman
      - oozie
      - hue
      - schemaregistry
      - smm
      - ranger
      - rangerkms
    encoding: utf8
    collation: utf8_general_ci
  delegate_to: "{{ cloudera_manager_database_host }}"
  connection: ssh
  when:
  - cloudera_manager_database_type == 'mysql' or cloudera_manager_database_type == 'mariadb'

- name: Create Cloudera Manager database user
  mysql_user:
    name: hive
    password: "{{ master_password }}"
    update_password: always
    host: '%'
    priv: 'metastore.*:ALL'
  delegate_to: "{{ cloudera_manager_database_host }}"
  connection: ssh
  when:
  - cloudera_manager_database_type == 'mysql' or cloudera_manager_database_type == 'mariadb'

- name: Create Cloudera Manager database user
  mysql_user:
    name: rangeradmin
    password: "{{ master_password }}"
    update_password: always
    host: '%'
    priv: 'ranger.*:ALL'
  delegate_to: "{{ cloudera_manager_database_host }}"
  connection: ssh
  when:
  - cloudera_manager_database_type == 'mysql' or cloudera_manager_database_type == 'mariadb'

- name: Create Cloudera Manager database user
  mysql_user:
    name: "{{ item }}"
    password: "{{ master_password }}"
    update_password: always
    host: '%'
    priv: '{{ item }}.*:ALL'
  delegate_to: "{{ cloudera_manager_database_host }}"
  connection: ssh
  loop:
    - amon
    - rman
    - oozie
    - hue
    - schemaregistry
    - smm
    - rangerkms
  when:
  - cloudera_manager_database_type == 'mysql' or cloudera_manager_database_type == 'mariadb'

# - name: Restore Parcels related tables
#   mysql_db:
#     state: import
#     name: "{{ cloudera_manager_database_name }}"
#     target: "{{ role_path }}/files/parcels_def.sql"
